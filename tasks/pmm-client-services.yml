---

- name: Check for services already running
  shell: "pmm-admin list | grep -i {{ item }} | grep Running |  awk '{print tolower($1)}'"
  with_items: "{{ pmm_client_add_service }}"
  changed_when: false
  register: services_running

- name: Check for services already added
  shell: "pmm-admin list | grep -i {{ item }} |  awk '{print tolower($1)}'"
  with_items: "{{ pmm_client_add_service }}"
  changed_when: false
  register: services_added

- name: Checking for Linux and proxysql metrics to be added
  command: "pmm-admin add {{ item }}"
  with_items: "{{ pmm_client_add_service }}"
  when: >
         (( item in services_running.results.0.stdout_lines) or ( item in services_added.results.0.stdout_lines)) and 
         (('linux:metrics' in item) or ('proxysql:metrics' in item)) and
         "mysql" not in pmm_client_add_service

- name: Check if MySQL is runnning
  shell: "systemctl status mysql | grep Active | awk '{ print $2 }'"
  register: mysql_status
  changed_when: false
  when: "'mysql' in pmm_client_add_service"
  check_mode: no

- name: Add MySQL Metrics
  command: "pmm-admin add mysql --username={{ pmm_client_db_username }} --password={{ pmm_client_db_password }}"
  when: >
         services_added.results.0.stdout.find('mysql') == -1 and
         services_running.results.0.stdout.find('mysqld_exporter') == -1 and
         "'mysql' in pmm_client_add_service" and
         mysql_status.stdout == 'active'

- name: Removing services as defined in pmm_client_remove_service
  command: pmm-admin remove {{ item }}
  with_items: "{{ pmm_client_remove_service }}"
  when: ( item in services_added.results.0.stdout_lines) or (item == 'mysql' or item == 'mongodb')

- name: Checking for Services to stop
  command: "pmm-admin stop {{ item }}"
  with_items: "{{ pmm_client_service_stop }}"
  when: ( item in services_running.results.0.stdout_lines)


- name: Checking for Services to start
  command: "pmm-admin start {{ item }}"
  with_items: "{{ pmm_client_service_start }}"
  when: not( item in services_running.results.0.stdout_lines )